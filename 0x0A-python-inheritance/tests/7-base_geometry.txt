The ``7-base_geometry`` module
==============================

Using the ``BaseGeometry`` class
--------------------------------

import the BaseGeometry class
	>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

instantiate the class
	>>> bg = BaseGeometry()

test the area method
	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

test the integer_validator method
	>>> bg.integer_validator("age", 22)

	>>> bg.integer_validator("age", 22.5)
	Traceback (most recent call last):
	...
	TypeError: age must be an integer

	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

	>>> bg.integer_validator("age", -2)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

	>>> bg.integer_validator("name", "quwam")
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

	>>> bg.integer_validator("value", [1, 2])
	Traceback (most recent call last):
	...
	TypeError: value must be an integer

	>>> bg.integer_validator("value", (1,2))
	Traceback (most recent call last):
	...
	TypeError: value must be an integer

	>>> bg.integer_validator("value", {1,2})
	Traceback (most recent call last):
	...
	TypeError: value must be an integer

	>>> bg.integer_validator("value", False)
	Traceback (most recent call last):
	...
	TypeError: value must be an integer

	>>> bg.integer_validator("value", None)
	Traceback (most recent call last):
	...
	TypeError: value must be an integer

	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("value")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'
